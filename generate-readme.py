import yaml
import sys

output_readme = 'schema/README.md'

def schema():
    SCHEMA = {}
    with open("schema/schema.yml", "r") as stream:
        try:
            SCHEMA = yaml.safe_load(stream)
        except yaml.YAMLError as exc:
            print(exc)
            sys.exit()
    return SCHEMA

# def terms(s):
#     return sorted(s['terms'], key=lambda d: d['_position'])

TXT = """# Annotation schema

**Do not edit: this file is automatically generated**

## Introduction
"""

SCHEMA = schema()

TXT = TXT + """
## Containers and Components
"""

TXT = TXT + """
### List of types

"""
# List of container types

for t in SCHEMA['types']:
    TXT = TXT + "#### " + t + "\n"
    o = SCHEMA['types'][t]
    ks = ['type', 'label', 'supertype-id']
    for k in ks:
        if k in o:
            TXT = TXT + "*" + k + "*: " + str(o[k]) + "\n"
 
# List of terms to annotate containers
TXT = TXT + """
#### Terms
"""

TXT = TXT + """
### Components
"""

TXT = TXT + """
#### Terms
"""

for t in SCHEMA['terms']:
    TXT = TXT + "#### " + t + "\n"
    o = SCHEMA['terms'][t]
    ks = ['term', 'label', 'scope', 'super-term']
    for k in ks:
        if k in o:
            TXT = TXT + "*" + k + "*: " + str(o[k]) + "\n"
    if 'description' in o:
        TXT = TXT + "\n" + str(o[ 'description']) + "\n\n"

with open(output_readme, "w") as text_file:
    text_file.write(TXT)